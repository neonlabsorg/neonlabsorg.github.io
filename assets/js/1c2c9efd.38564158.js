"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7266],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,k=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return n?o.createElement(k,i(i({ref:t},p),{},{components:n})):o.createElement(k,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6866:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],l={title:"Faucet"},s=void 0,u={unversionedId:"developing/utilities/faucet",id:"developing/utilities/faucet",title:"Faucet",description:"Using Faucet you can request Test NEON tokens on Solana devnet.",source:"@site/docs/developing/utilities/faucet.md",sourceDirName:"developing/utilities",slug:"/developing/utilities/faucet",permalink:"/docs/developing/utilities/faucet",tags:[],version:"current",frontMatter:{title:"Faucet"},sidebar:"tutorialSidebar",previous:{title:"NeonSwap",permalink:"/docs/developing/utilities/neonswap"},next:{title:"Operator Requirements",permalink:"/docs/operating/operator_requirements"}},p={},c=[{value:"Requesting test NEON tokens via UI",id:"requesting-test-neon-tokens-via-ui",level:2},{value:"Step 1",id:"step-1",level:3},{value:"Step 2",id:"step-2",level:3},{value:"Step 3",id:"step-3",level:3}],m={toc:c};function d(e){var t=e.components,l=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Using Faucet you can request Test NEON tokens on Solana devnet."),(0,a.kt)("h2",{id:"requesting-test-neon-tokens-via-ui"},"Requesting test NEON tokens via UI"),(0,a.kt)("h3",{id:"step-1"},"Step 1"),(0,a.kt)("p",null,"Set up MetsMask in accordance with ",(0,a.kt)("a",{parentName:"p",href:"../../wallet/metamask_setup#installing-metamask"},"Setting up MetaMask")),(0,a.kt)("h3",{id:"step-2"},"Step 2"),(0,a.kt)("p",null,"Go to the page to request test tokens using the following ",(0,a.kt)("a",{parentName:"p",href:"https://neonswap.live/#/get-tokens"},"link"),"."),(0,a.kt)("h3",{id:"step-3"},"Step 3"),(0,a.kt)("p",null,"Connect your wallet:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Click button ",(0,a.kt)("inlineCode",{parentName:"li"},"CONNECT WALET"))),(0,a.kt)("div",{class:"neon-img-box-300",style:{textAlign:"center"}},(0,a.kt)("p",null,(0,a.kt)("img",{src:n(3999).Z,width:"623",height:"415"}))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Click button ",(0,a.kt)("inlineCode",{parentName:"li"},"CONNECT METAMASK"))),(0,a.kt)("div",{class:"neon-img-box-300",style:{textAlign:"center"}},(0,a.kt)("p",null,(0,a.kt)("img",{src:n(9892).Z,width:"596",height:"488"}))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In the MetaMask window, select one or more accounts and click ",(0,a.kt)("inlineCode",{parentName:"li"},"Next"),".")),(0,a.kt)("div",{class:"neon-img-box-300",style:{textAlign:"center"}},(0,a.kt)("p",null,(0,a.kt)("img",{src:n(4462).Z,width:"392",height:"608"}))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u0421lick the ",(0,a.kt)("inlineCode",{parentName:"li"},"Connect")," button to confirm.")),(0,a.kt)("div",{class:"neon-img-box-300",style:{textAlign:"center"}},(0,a.kt)("p",null,(0,a.kt)("img",{src:n(5656).Z,width:"371",height:"631"}))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In the form that appears, enter the number of requested tokens and click the button ",(0,a.kt)("inlineCode",{parentName:"li"},"GET TOKENS"),".")),(0,a.kt)("div",{class:"neon-img-box-300",style:{textAlign:"center"}},(0,a.kt)("p",null,(0,a.kt)("img",{src:n(5085).Z,width:"469",height:"339"}))),(0,a.kt)("h1",{id:"requesting-test-neon-tokens-via-http-api-endpoints"},"Requesting test NEON tokens via HTTP API Endpoints"),(0,a.kt)("p",null,"A client uses POST requests to send data to the server.\nSeveral endpoints are supported."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"|------------------------------------------------------------------------------------------\n| Endpoint               | Workload    | Description\n|------------------------------------------------------------------------------------------\n| request_ping           | text        | Requests ping to check availability of the service\n| request_version        |             | Requests version of the service\n| request_neon_in_galans | JSON        | Requests NEON tokens, amount in galans (fractions)\n| request_neon           | JSON        | Requests NEON tokens\n| request_erc20          | JSON        | Requests ERC20 tokens\n|------------------------------------------------------------------------------------------\n")),(0,a.kt)("p",null,"Example of JSON workload:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{ "wallet": "0x4570e07200b6332989Dc04fA2a671b839D26eF0E", "amount": 1 }\n')),(0,a.kt)("p",null,"Example of ping request with ",(0,a.kt)("strong",{parentName:"p"},"curl")," utility:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -i -X POST -d 'Hello' 'http://localhost:3333/request_ping'\n")),(0,a.kt)("p",null,"Example of version request with ",(0,a.kt)("strong",{parentName:"p"},"curl")," utility:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -i -X POST 'http://localhost:3333/request_version'\n")),(0,a.kt)("p",null,"Example of NEON drop request with ",(0,a.kt)("strong",{parentName:"p"},"curl")," utility:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'curl -i -X POST \\\n    -d \'{"wallet": "0x4570e07200b6332989Dc04fA2a671b839D26eF0E", "amount": 1}\' \\\n    \'http://localhost:3333/request_neon\'\n')),(0,a.kt)("h1",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"The configuration file should be in TOML format."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"|----------------------------------------------------------------------------------------------\n| Option                  | Description\n|----------------------------------------------------------------------------------------------\n| rpc.bind                | Local interface TCP address\n| rpc.port                | TCP port to listen\n| rpc.allowed_origins     | List of client URLs that can send requests\n| web3.enable             | Flag to on/off the entire web3 section\n| web3.rpc_url            | Ethereum network endpoint\n| web3.private_key        | Ethereum private key to support operations\n| web3.tokens             | List of available ERC20 token addresses\n| web3.max_amount         | Largest amount of ERC20 tokens to distribute with a single request\n| solana.enable           | Flag to on/off the entire solana section\n| solana.url              | Solana network endpoint\n| solana.commitment       | Solana client commitment level\n| solana.operator_keyfile | Solana keyfile to support operations\n| solana.evm_loader       | Address of the EVM Loader program\n| solana.max_amount       | Largest amount of NEONs to distribute with a single request\n|----------------------------------------------------------------------------------------------\n")),(0,a.kt)("p",null,"Example of the configuration file contents:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'[rpc]\nbind = "0.0.0.0"\nport = 3333\nallowed_origins = ["http://localhost"]\n\n[web3]\nenable = true\nrpc_url = "http://localhost:9090/solana"\nprivate_key = "0x0000000000000000000000000000000000000000000000000000000000000Ace"\ntokens = ["0x00000000000000000000000000000000CafeBabe",\n          "0x00000000000000000000000000000000DeadBeef"]\nmax_amount = 1000\n\n[solana]\nenable = true\nurl = "http://localhost:8899"\ncommitment = "processed"\nevm_loader = "EvmLoaderId11111111111111111111111111111111"\noperator_keyfile = "operator_id.json"\nmax_amount = 10\n')),(0,a.kt)("p",null,"The configuration file is optional and, if present, can be incomplete\n(default values or environment variables will be used in such cases)."),(0,a.kt)("h1",{id:"environment-variables"},"Environment Variables"),(0,a.kt)("p",null,"Environment variables, if present, override portions of the configuration."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'|----------------------------------------------------------------------------------------------\n| Name                       | Overrides               | Value Example\n|----------------------------------------------------------------------------------------------\n| FAUCET_RPC_BIND            | rpc.bind                | `0.0.0.0`\n| FAUCET_RPC_PORT            | rpc.port                | `3333`\n| FAUCET_RPC_ALLOWED_ORIGINS | rpc.allowed_origins     | `["http://localhost"]`\n| FAUCET_WEB3_ENABLE         | web3.enable             | `true`\n| WEB3_RPC_URL               | web3.rpc_url            | `http://localhost:9090/solana`\n| WEB3_PRIVATE_KEY           | web3.private_key        | `0x00...0A`\n| NEON_ERC20_TOKENS          | web3.tokens             | `["0x00B", "0x00C"]`\n| NEON_ERC20_MAX_AMOUNT      | web3.max_amount         | `1000`\n| FAUCET_SOLANA_ENABLE       | solana.enable           | `true`\n| SOLANA_URL                 | solana.url              | `http://localhost:8899`\n| SOLANA_COMMITMENT          | solana.commitment       | `processed`\n| EVM_LOADER                 | solana.evm_loader       | `EvmLoaderId11111111111111111111111111111111`\n| NEON_OPERATOR_KEYFILE      | solana.operator_keyfile | `operator_id.json`\n| NEON_ETH_MAX_AMOUNT        | solana.max_amount       | `10`\n| NEON_LOG                   |                         | `json`\n| RUST_LOG                   |                         | `info`\n|----------------------------------------------------------------------------------------------\n')))}d.isMDXComponent=!0},5656:function(e,t,n){t.Z=n.p+"assets/images/confirm_connection-999cda52dbe81e58221b76804345c0eb.png"},9892:function(e,t,n){t.Z=n.p+"assets/images/connect_metamask-22c2c11a9bc93315d1fed3f42b2c31a9.png"},3999:function(e,t,n){t.Z=n.p+"assets/images/connect_walet-96701c4d9b7f8c74d2a43d3187c03e75.png"},5085:function(e,t,n){t.Z=n.p+"assets/images/get_tokens-29f1896fd87b89ca64ea0d06183c4be3.png"},4462:function(e,t,n){t.Z=n.p+"assets/images/metamask_next-45ca5fa4476c876883048b9e594c8549.png"}}]);