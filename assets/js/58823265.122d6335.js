"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5995],{3905:function(n,e,t){t.d(e,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var l=r.createContext({}),i=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},p=function(n){var e=i(n.components);return r.createElement(l.Provider,{value:e},n.children)},u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,a=n.originalType,l=n.parentName,p=c(n,["components","mdxType","originalType","parentName"]),m=i(t),d=o,y=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return t?r.createElement(y,s(s({ref:e},p),{},{components:t})):r.createElement(y,s({ref:e},p))}));function d(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var a=t.length,s=new Array(a);s[0]=m;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=n,c.mdxType="string"==typeof n?n:o,s[1]=c;for(var i=2;i<a;i++)s[i]=t[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5379:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return i},toc:function(){return p},default:function(){return m}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),s=["components"],c={},l=void 0,i={unversionedId:"solana_cluster/docker-compose-local.yml",id:"solana_cluster/docker-compose-local.yml",isDocsHomePage:!1,title:"docker-compose-local.yml",description:"`yml",source:"@site/docs/solana_cluster/docker-compose-local.yml.md",sourceDirName:"solana_cluster",slug:"/solana_cluster/docker-compose-local.yml",permalink:"/docs/solana_cluster/docker-compose-local.yml",tags:[],version:"current",frontMatter:{}},p=[],u={toc:p};function m(n){var e=n.components,t=(0,o.Z)(n,s);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},'version: "3"\n\nservices:\n  solana:\n    container_name: solana\n    image: neonlabsorg/solana:v1.7.9-testnet\n    environment:\n      SOLANA_URL: http://solana:8899\n      RUST_LOG: solana_runtime::system_instruction_processor=trace,solana_runtime::message_processor=debug,solana_bpf_loader=debug,solana_rbpf=debug\n    networks:\n      - net\n    healthcheck:\n      test: [ CMD-SHELL, "solana cluster-version -u http://solana:8899" ]\n      interval: 5s\n      timeout: 10s\n      retries: 10\n      start_period: 10s\n    volumes:\n      - "./solana_state:/opt/solana/config/"\n\n  evm_loader:\n    container_name: evm_loader\n    image: neonlabsorg/evm_loader:latest\n    environment:\n      - SOLANA_URL=http://solana:8899\n    networks:\n      - net\n    depends_on:\n      solana:\n        condition: service_healthy\n    command: bash -c "create-test-accounts.sh 1 && deploy-evm.sh"\n\n  postgres:\n    container_name: postgres\n    image: postgres:14.0\n    command: postgres -c \'max_connections=1000\'\n    environment:\n      POSTGRES_DB: neon-db\n      POSTGRES_USER: neon-proxy\n      POSTGRES_PASSWORD: neon-proxy-pass\n    hostname: postgres\n    healthcheck:\n      test: [ CMD-SHELL, "pg_isready -h postgres -p 5432" ]\n      interval: 5s\n      timeout: 10s\n      retries: 10\n      start_period: 5s\n    networks:\n      - net\n\n  proxy:\n    container_name: proxy\n    image: neonlabsorg/proxy:latest\n    environment:\n      SOLANA_URL: http://solana:8899\n      POSTGRES_DB: neon-db\n      POSTGRES_USER: neon-proxy\n      POSTGRES_PASSWORD: neon-proxy-pass\n      POSTGRES_HOST: postgres\n      NEW_USER_AIRDROP_AMOUNT: 100\n      LOG_SENDING_SOLANA_TRANSACTION: "YES"\n      LOG_NEON_CLI_DEBUG: "YES"\n      EVM_LOADER: 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io\n    depends_on:\n      postgres:\n        condition: service_healthy\n      evm_loader:\n        condition: service_completed_successfully\n    ports:\n      - 127.0.0.1:9090:9090\n    networks:\n      - net\n    entrypoint: proxy/run-test-proxy.sh\n\n  indexer:\n    container_name: indexer\n    image: neonlabsorg/proxy:latest\n    environment:\n      SOLANA_URL: http://solana:8899\n      POSTGRES_DB: neon-db\n      POSTGRES_USER: neon-proxy\n      POSTGRES_PASSWORD: neon-proxy-pass\n      POSTGRES_HOST: postgres\n      WRITE_TRANSACTION_COST_IN_DB: Nope\n      CONFIG: local\n    hostname: indexer\n    depends_on:\n      postgres:\n        condition: service_healthy\n      evm_loader:\n        condition: service_completed_successfully\n    networks:\n      - net\n    entrypoint: proxy/run-indexer.sh\n\nnetworks:\n  net:\n')))}m.isMDXComponent=!0}}]);